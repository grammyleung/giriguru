@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using Microsoft.Extensions.Localization
@using GiriGuru.Web

@inject IViewLocalizer Localizer
@inject IStringLocalizer<SharedString> SharedStringLocalizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@model ViewBlogTag
@{
	ViewData["Title"] = Localizer["page-title"];
	ViewData["MenuActiveTag"] = "active";

	/*
	bool isAddingNew = true;
	Guid guid = Guid.Empty;
	if (Context.Request.Query.TryGetValue("guid", out Microsoft.Extensions.Primitives.StringValues queryGuid))
	{
		if (Guid.TryParse(queryGuid, out guid))
		{
			if (guid != Guid.Empty)
			{
				isAddingNew = false;
			}
		}
	}

	if (isAddingNew)
	{
		guid = Guid.NewGuid();
	}
	*/

	Guid guid = Guid.Empty;
	if (Model.SelectedTagGroup != null)
	{
		guid = Model.SelectedTagGroup.Guid;
	}
}

@section page_head
	{
}

<!-- Content Header (Page header) -->
<section class="content-header">
	<h1>
		@Localizer["content-header-title"]
		<small>@Localizer["content-header-caption"]</small>
	</h1>
	<ol class="breadcrumb">
		<li><a href="/"><i class="fa fa-home"></i> @SharedStringLocalizer["content-header-path-home"]</a></li>
		<li><a href="#"><i class="fa fa-book"></i> @SharedStringLocalizer["content-header-path-blog"]</a></li>
		<li class="active"><i class="fa fa-tags"></i> @SharedStringLocalizer["content-header-path-blog-tag"]</li>
	</ol>
</section>
<!-- Main content -->
<section class="content">
	<div class="row">
		<div class="col-md-6">
			<div class="box">
				<div class="box-header">
					<h3 class="box-title">@Localizer["title-group"]</h3>
					<button type="button" class="btn btn-default pull-right" onclick="javascript: document.location.href = '@Context.Request.Path' + '?00000000-0000-0000-0000-000000000000';">@Localizer["button-group-new"]</button>
				</div>
				<!-- /.box-header -->
				<div class="box-body no-padding">
					<table class="table table-condensed">
						<tr>
							<th style="width: 10px">#</th>
							<th style="display:none;">@Localizer["group-column-guid"]</th>
							<th>@Localizer["group-column-name-english"]</th>
							<th>@Localizer["group-column-name-chinese"]</th>
							<th>@Localizer["group-column-name-tagcount"]</th>
							<th style="width: 40px"></th>
						</tr>
						@{
							int number = 0;
							if (Model.TagGroups != null)
							{
								foreach (DbTagGroup group in Model.TagGroups)
								{
									number++;

									string trBg = string.Empty;
									if (Model.SelectedTagGroup == group)
									{
										trBg = "bg-gray-light";
									}
									<tr class="@trBg">
										<td>@number</td>
										<td style="display:none;">@group.Guid</td>
										<td>@group.Name_en</td>
										<td>@group.Name_zh</td>
										@if (group.Tags == null)
										{
											<td>0</td>
										}
										else
										{
											<td>@group.Tags.Count</td>
										}
										<td><a href="@Context.Request.Path?@group.Guid"><span class="badge bg-blue">@Localizer["row-setting"]</span></a></td>
									</tr>
								}
							}
						}
					</table>
				</div>
				<!-- /.box-body -->
				<div class="box-footer">
					<button type="button" class="btn btn-default pull-right" onclick="javascript: document.location.href = '@Context.Request.Path' + '?00000000-0000-0000-0000-000000000000';">@Localizer["button-group-new"]</button>
				</div>
				<!-- /.box-footer -->
			</div>
			<!-- /.box -->
		</div>
		<!-- /.col -->
		<div class="col-md-6">
			<!-- general form elements disabled -->
			@if (Model.SelectedTagGroup != null)
			{
				<div class="box box-info">
					<div class="box-header with-border">
						<h3 class="box-title">@Model.FormTitle</h3>
					</div>
					@using (Html.BeginForm("TagGroup", "Blog", FormMethod.Post))
					{
						<!-- /.box-header -->
						<div class="box-body">
							<!-- text input -->
							<div class="form-group">
								<label>@Localizer["form-guid"]</label>
								<input type="text" class="form-control" readonly name="formGuid" value="@Model.SelectedTagGroup.Guid.ToString()" />
							</div>
							<div class="form-group">
								<label>@Localizer["form-name-english"]</label>
								<input type="text" class="form-control" name="formNameEn" value="@Model.SelectedTagGroup.Name_en" />
							</div>
							<div class="form-group">
								<label>@Localizer["form-name-chinese"]</label>
								<input type="text" class="form-control" name="formNameZh" value="@Model.SelectedTagGroup.Name_zh" />
							</div>
						</div>
						<!-- /.box-body -->
						<div class="box-footer">
							<button type="button" class="btn btn-default" onclick="javascript: document.location.href = '@Context.Request.Path';">@Localizer["form-button-return"]</button>
							@if (guid != Guid.Empty)
							{
								<button type="button" id="FormButtonDelete" class="btn btn-danger pull-right">@Localizer["form-button-delete"]</button>
							}
							<button type="submit" class="btn btn-info pull-right margin-r-5">@Model.FormSubmit</button>
						</div>
						<!-- /.box-footer -->
					}
				</div>
				@if (Model.SelectedTagGroup.Guid != Guid.Empty)
				{
					<div class="box box-info">
						<div class="box-header with-border">
							<h3 class="box-title">@Localizer["title-tag"]</h3>
						</div>
						<!-- /.box-header -->
						<div class="box-body no-padding">
							<table class="table table-condensed">
								<tr>
									<th style="width: 10px">#</th>
									<th style="display:none;">@Localizer["tag-column-guid"]</th>
									<th>@Localizer["tag-column-name-english"]</th>
									<th>@Localizer["tag-column-name-chinese"]</th>
									<th style=""></th>
								</tr>
								@{
									int number_tag = 0;
									if (Model.SelectedTagGroup.Tags != null)
									{
										foreach (DbTag tag in Model.SelectedTagGroup.Tags)
										{
											number_tag++;
											using (Html.BeginForm("TagUpdate", "Blog", FormMethod.Post))
											{
												<input type="hidden" name="formGroupGuid" value="@Model.SelectedTagGroup.Guid.ToString()" />
												<input type="hidden" name="formTagGuid" value="@tag.Guid.ToString()" />
												<tr>
													<td>@number_tag</td>
													<td style="display:none;">@tag.Guid</td>
													<td><input type="text" name="formNameEn" value="@tag.Name_en" class="form-control" /></td>
													<td><input type="text" name="formNameZh" value="@tag.Name_zh" class="form-control" /></td>
													<td>
														<div class="pull-right input-group input-group-lg">
															<button type="button" class="btn btn-warning dropdown-toggle" data-toggle="dropdown">
																@Localizer["table-button-move"]
																<span class="margin-r-5"></span>
																<span class="fa fa-caret-down"></span>
															</button>
															<ul class="dropdown-menu">
																@{
																	if (Model.TagGroups != null)
																	{
																		foreach (DbTagGroup group in Model.TagGroups)
																		{
																			switch (System.Globalization.CultureInfo.CurrentCulture.Name)
																			{
																				case "en":
																					<li><a href="/Blog/TagMove?tagGuid=@tag.Guid&groupGuid=@group.Guid">@group.Name_en</a></li>
																					break;
																				case "zh":
																					<li><a href="/Blog/TagMove?tagGuid=@tag.Guid&groupGuid=@group.Guid">@group.Name_zh</a></li>
																					break;
																				default:
																					break;
																			}
																		}
																	}
																}
															</ul>
														</div>
														<button type="button" id="FormButtonDeleteTag" data-group-guid="@Model.SelectedTagGroup.Guid.ToString()" data-tag-guid="@tag.Guid.ToString()" class="btn btn-danger pull-right margin-r-5 btn-delete">@Localizer["form-button-delete"]</button>
														<button type="submit" class="btn btn-info pull-right margin-r-5">@Localizer["table-button-update"]</button>
													</td>
												</tr>
											}
										}
									}
								}
								@using (Html.BeginForm("TagInsert", "Blog", FormMethod.Post))
								{
									<input type="hidden" name="formGuid" value="@Model.SelectedTagGroup.Guid.ToString()" />
									<tr class="bg-gray-light">
										<td></td>
										<td style="display:none;"></td>
										<td><input type="text" name="formNameEn" class="form-control" /></td>
										<td><input type="text" name="formNameZh" class="form-control" /></td>
										<td><button type="submit" class="btn btn-success pull-right">@Localizer["table-button-insert"]</button></td>
									</tr>
								}
							</table>
						</div>
						<!-- /.box-body -->
					</div>
				}
			}
			<div style="height:65px; margin:0 0 0 0;">
				@if (Model.ResultMessage != null)
				{
					<div style="position:relative; top:20px; border:1px solid red; height:35px; background:#ffcccc; text-align:center; padding-top:6px;">
						@Model.ResultMessage
					</div>
				}
			</div>
			<!-- /.box -->
			<!-- /.box -->
		</div>
		<!-- /.col -->
	</div>
	<!-- /.row -->


</section>
<!-- /.content -->

@section page_foot
	{
	@if (Model.SelectedTagGroup != null && Model.SelectedTagGroup.Tags != null && Model.SelectedTagGroup.Tags.Count > 0)
	{
		<script>
		$(document).ready(function () {
			// Delete Group
			$('#FormButtonDelete').click(function () {
				swal("@Localizer["dialog-delete-message-tags"]");
			});

			//Delete Tag
			$('.btn-delete').click(function () {
				swal("@Localizer["dialog-delete-text-tag"]", {
					buttons: {
						cancel: "@Localizer["dialog-delete-button-cancel"]",
						confirm: {
							text: "@Localizer["dialog-delete-button-confirm"]",
							value: "confirm",
						},
					},
				})
					.then((value) => {
						switch (value) {

							case "confirm":
								var serverUrl = "/Blog/TagDelete";
								var plainObject = { 'group_guid': $(this).data("group-guid"), 'tag_guid': $(this).data("tag-guid") };
								$.ajax(serverUrl, {
									type: "POST",
									data: plainObject,
									statusCode: {
										200: function (response) {
											window.location = "/Blog/Tag?@guid";
										},
										400: function (response) {
											alert(response);
											switch (response) {
												case "InvalidGuid":
													swal("@Localizer["dialog-delete-message-invalidguid"]");
													break;
												case "NotEmpty":
													swal("@Localizer["dialog-delete-message-linked"]");
													break;
												default:
											}
										},
										404: function (response) {
											swal("@Localizer["dialog-delete-message-notfound"]");
										}
									},
									success: function () {},
								});
								break;

							default:
								//do nothing;
						}
					});
			});
		});
		</script>
	}
	else
	{
		<script>
		$(document).ready(function () {
			// Delete Group
			$('#FormButtonDelete').click(function () {
				swal("@Localizer["dialog-delete-text"]", {
					buttons: {
						cancel: "@Localizer["dialog-delete-button-cancel"]",
						confirm: {
							text: "@Localizer["dialog-delete-button-confirm"]",
							value: "confirm",
						},
					},
				})
					.then((value) => {
						switch (value) {

							case "confirm":
								var serverUrl = "/Blog/TagGroupDelete";
								var plainObject = { 'guid': '@guid' };
								$.ajax(serverUrl, {
									type: "POST",
									data: plainObject,
									statusCode: {
										200: function (response) {
											window.location = "/Blog/Tag";
										},
										400: function (response) {
											alert(response);
											switch (response) {
												case "InvalidGuid":
													swal("@Localizer["dialog-delete-message-invalidguid"]");
													break;
												case "NotEmpty":
													swal("@Localizer["dialog-delete-message-tags"]");
													break;
												default:
											}
										},
										404: function (response) {
											swal("@Localizer["dialog-delete-message-notfound"]");
										}
									},
									success: function () {},
								});
								break;

							default:
								//do nothing;
						}
					});
			});
		});
		</script>
	}
}